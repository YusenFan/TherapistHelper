version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: therapist_postgres
    environment:
      POSTGRES_USER: therapist
      POSTGRES_PASSWORD: therapist123
      POSTGRES_DB: therapist_helper
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - therapist_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U therapist -d therapist_helper"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: therapist_backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://therapist:therapist123@postgres:5432/therapist_helper
      - ENVIRONMENT=development
    volumes:
      - ./backend:/app
      - backend_cache:/app/__pycache__
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - therapist_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: therapist_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    networks:
      - therapist_network
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    command: npm run dev
    depends_on:
      - backend

volumes:
  postgres_data:
    driver: local
  backend_cache:
    driver: local
  frontend_node_modules:
    driver: local

networks:
  therapist_network:
    driver: bridge 